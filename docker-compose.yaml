services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      PGUSER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
      POSTGRES_DB: s4
      SCHEMA: public
    volumes:
      - pg-data:/data/postgres
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

  migration:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: dockerfiles/router
      target: migration
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DATABASE: s4
    network_mode: host

  router:
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: dockerfiles/router
      target: router


volumes:
  pg-data:
